version: '3.8'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: clarazen-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - api
      - php-fpm
    restart: unless-stopped
    networks:
      - clarazen-network

  frontend:
    build: 
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: clarazen-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:4000
      - NEXT_PUBLIC_APP_URL=${FRONTEND_URL}
    restart: unless-stopped
    networks:
      - clarazen-network
    depends_on:
      - api

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: clarazen-api
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASS}@db:3306/${DB_NAME}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - FRONTEND_URL=${FRONTEND_URL}
    ports:
      - "4000:4000"
    volumes:
      - ./logs/api:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - clarazen-network

  php-fpm:
    build:
      context: ./project
      dockerfile: Dockerfile
    container_name: clarazen-php
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./project:/var/www/html
      - ./logs/php:/var/log/php
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - clarazen-network

  db:
    image: mysql:8.0
    container_name: clarazen-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - db-data:/var/lib/mysql
      - ./infra/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./infra/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    networks:
      - clarazen-network

  redis:
    image: redis:7-alpine
    container_name: clarazen-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - clarazen-network

  # Servi√ßo de monitoramento (opcional)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: clarazen-portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    restart: unless-stopped
    networks:
      - clarazen-network

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local
  portainer-data:
    driver: local

networks:
  clarazen-network:
    driver: bridge